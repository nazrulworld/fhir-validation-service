services:
  fhir-validator:
    build:
      context: .
      # Use default platform or override with DOCKER_DEFAULT_PLATFORM env var
    ports:
      - "${FHIR_VALIDATOR_PORT:-8880}:8880"
    environment:
      - PG_HOST=postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FHIR_VALIDATOR_PORT:-8880}/health"]
      interval: 30s
      start_period: 40s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:16.8-alpine3.21
    # Use default platform or override with DOCKER_DEFAULT_PLATFORM env var
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256  # Enhanced security
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:9.4.0
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres-data:
  pgadmin-data: